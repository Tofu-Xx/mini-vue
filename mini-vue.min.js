function Vue(e){let t,r={},a=e.el?.at?document.querySelector(e.el):e.el??document,d=Object.assign(new Proxy("object"==typeof e.data?e.data:e.data?.()??{},{get:(...e)=>[Reflect.get(...e),(r[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),r[e[1]]?.forEach(e=>e())][0]}),e.methods,{$el:a,$refs:{}}),o=(t,r)=>{let a=t.currentNode;if(1==a.nodeType)for(let{name:e,value:t}of a.attributes){"ref"==e&&(d.$refs[t]=a);"@"==e[0]&&(a[e.replace("@","on")]=d[t].bind(d));if(":"==e[0]){let o=e.slice(1);r(()=>a.setAttribute(o,a[o]=d[t]))}}if(3==a.nodeType){let e=a.data,t=Array(...e.matchAll(/\{\{(.*?)\}\}/g));t[0]&&r(()=>a.data=t.reduce((e,t)=>e.replace(t[0],d[t[1].trim()]),e))}t.nextNode()?o(t,r):e.mounted?.bind(d)()};o(document.createTreeWalker(a,7),e=>(t=e,e()));for(let[t,a]of Object.entries(e.watch??{})){let e=d[t];r[t].add(()=>Promise.resolve().then(()=>{let r=d[t];a.bind(d)(r,e);e=r}))}}
