function Vue(e){const t={deps:{}};const a=typeof e.el=="string"?document.querySelector(e.el):e.el??document;const n=Object.assign(new Proxy(e.data instanceof Function?e.data():e.data??{},{get:(...e)=>[Reflect.get(...e),(t.deps[e[1]]??=new Set).add(t.active)][0],set:(...e)=>[Reflect.set(...e),t.deps[e[1]]?.forEach(e=>e())][0]}),e.methods,{$el:a,$refs:{}});(function t(a,d,_){if(a.nodeType==1)for(let e of a.attributes){e.name[0]=="@"&&a.addEventListener(e.name.slice(1),n[e.value].bind(n));e.name[0]==":"&&_(()=>a.setAttribute(e.__v__=e.name.slice(1),a[e.__v__]=n[e.value]));e.name=="ref"&&(n.$refs[e.value]=a)}if(a.nodeType==3&&(a.__v_tem__=a.data)&&(a.__v__=Array(...a.__v_tem__.matchAll(/\{\{(.*?)\}\}/g)))[0])_(()=>a.data=a.__v__.reduce((e,t)=>e.replace(t[0],n[t[1].trim()]),a.__v_tem__));d.nextNode()?t.bind(n)(d.currentNode,d,_):e.mounted?.bind(n)()})(a,document.createTreeWalker(a,NodeFilter.SHOW_ALL),e=>(t.active=e,e()));for(const[a,d]of Object.entries(e.watch??{}))d.oldVal=n[a],t.deps[a].add(()=>Promise.resolve().then(()=>(d.val=n[a],d.bind(n)(d.val,d.oldVal),d.oldVal=d.val)))};
