function Vue(e){let t,a={},r=e.el?.at?document.querySelector(e.el):e.el;if(!r)return;let n=Object.assign(new Proxy("object"==typeof e.data?e.data:e.data?.()??{},{get:(...e)=>[Reflect.get(...e),(a[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),a[e[1]]?.forEach(e=>e())][0]}),e.methods,{$el:r,$refs:{}}),l=(t,a,r)=>{if(1==a.nodeType)for(let e of a.attributes){"ref"==e.name&&(n.$refs[e.value]=a);"@"==e.name[0]&&a.addEventListener(e.name.slice(1),n[e.value].bind(n));if(":"==e.name[0]){let t=e.name.slice(1);r(()=>a.setAttribute(t,a[t]=n[e.value]))}}if(3==a.nodeType){let e=a.data,t=Array(...e.matchAll(/\{\{(.*?)\}\}/g));t[0]&&r(()=>a.data=t.reduce((e,t)=>e.replace(t[0],n[t[1].trim()]),e))}t.nextNode()?l(t,t.currentNode,r):e.mounted?.bind(n)()};l(document.createTreeWalker(r,7),r,e=>(t=e,e()));for(let[t,r]of Object.entries(e.watch??{})){let e=n[t];a[t].add(()=>Promise.resolve().then(()=>{let a=n[t];r.bind(n)(a,e);e=a}))}}
