function Vue(e){let t,a={},n=e.el?.at?document.querySelector(e.el):e.el??document,r=Object.assign(new Proxy("object"==typeof e.data?e.data:e.data?.()??{},{get:(...e)=>[Reflect.get(...e),(a[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),a[e[1]]?.forEach(e=>e())][0]}),e.methods,{$el:n,$refs:{}}),d=(t,a,n)=>{if(1==a.nodeType)for(let e of a.attributes){"ref"==e.name&&(r.$refs[e.value]=a);"@"==e.name[0]&&a.addEventListener(e.name.slice(1),r[e.value].bind(r));if(":"==e.name[0]){let t=e.name.slice(1);n(()=>a.setAttribute(t,a[t]=r[e.value]))}}if(3==a.nodeType){let e=a.data,t=Array(...e.matchAll(/\{\{(.*?)\}\}/g));t[0]&&n(()=>a.data=t.reduce((e,t)=>e.replace(t[0],r[t[1].trim()]),e))}t.nextNode()?d(t,t.currentNode,n):e.mounted?.bind(r)()};d(document.createTreeWalker(n,7),n,e=>(t=e,e()));for(let[t,n]of Object.entries(e.watch??{})){let e=r[t];a[t].add(()=>Promise.resolve().then(()=>{let a=r[t];n.bind(r)(a,e);e=a}))}}
