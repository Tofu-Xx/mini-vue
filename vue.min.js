function Vue(e){let t,l={},a=e.el?.at?document.querySelector(e.el):e.el??document,r=Object.assign(new Proxy("object"==typeof e.data?e.data:e.data?.()??{},{get:(...e)=>[Reflect.get(...e),(l[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),l[e[1]]?.forEach(e=>e?.())][0]}),e.methods,{$el:a,$refs:{}}),c=new RegExp(Object.keys(r).join("\\b|").replaceAll("$","\\$"),"g"),n=e=>new Function("$event","return "+e.replace(c,e=>"this."+e)),o=(t,l)=>{let a=t.currentNode,{nodeType:c,data:s}=a;if(1==c)for(let{name:e,value:t}of a.attributes){let c=e.slice(1);if("@"==e[0])a["on"+c]=(/[^\s\w$]/.test(t)?n(t):r[t.trim()])?.bind(r);if(":"==e[0])l(()=>a.setAttribute(c,a[c]=n(t).call(r)));"ref"==e&&(r.$refs[t]=a)}if(3==c)l(()=>a.data=s.replace(/\{\{(.*?)\}\}/g,(e,t)=>n(t).call(r)));t.nextNode()?o(t,l):e.mounted?.call(r)};o(document.createTreeWalker(a,7),e=>(t=e,e()));for(let[t,a]of Object.entries(e.watch??{})){let e=r[t];l[t].add(()=>Promise.resolve().then(()=>{let l=r[t];a.call(r,l,e);e=l}))}}
