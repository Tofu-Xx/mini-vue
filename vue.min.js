function Vue(e={}){let t,a=!1,r={},c=document.querySelector(e.el)??document,l=Object.assign(new Proxy({$el:c,$refs:{}},{get:(...e)=>[Reflect.get(...e),(r[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),queueMicrotask(()=>r[e[1]]?.forEach(e=>e?.()))][0]}),e.methods,e.data),d=RegExp(Object.keys(l).map(e=>`(?<![\\w$])${e}(?![\\w$])`).join("|").replace(/\$/g,"\\$"),"g"),n=(e,t="return ")=>Function("$event",t+e.replace(d,e=>"this."+e).trim()).bind(l),o=e=>(t=e,e()),s=(t,a=document.createTreeWalker(t,7))=>{let{nodeType:r,data:c}=t;if(1==r)for(let{name:e,value:a}of t.attributes){let r=e.slice(1);"@"==e[0]&&t.addEventListener(r,/[^\s\w$]/.test(a)?n(a,""):l[a.trim()]?.bind(l)),":"==e[0]&&o(()=>t.setAttribute(r,t[r]=n(a)())),"ref"==e&&(l.$refs[a]=t)}3==r&&o(()=>t.data=c.replace(/\{\{(.*?)\}\}/gs,(e,t)=>n(t)())),a.nextNode()?s(a.currentNode,a):e.mounted?.call(l)};for(let[t,a]of Object.entries(e.watch??{})){let e=l[t];r[t].add(()=>{queueMicrotask(()=>{let r=l[t];r!=e&&(a.call(l,r,e),e=r)})})}e.created?.call(l),s(c),t=()=>{a||(a=!0,setTimeout(()=>{a=!1,e.updated?.call(l)}))}}
