function Vue(e){let t,a={},l=e.el?.at?document.querySelector(e.el):e.el??document,r=Object.assign(new Proxy("object"==typeof e.data?e.data:e.data?.()??{},{get:(...e)=>[Reflect.get(...e),(a[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),a[e[1]]?.forEach(e=>e())][0]}),e.methods,{$el:l,$refs:{}}),c=(t,a)=>{let l=t.currentNode,{nodeType:o,data:d}=l;if(1==o)for(let{name:e,value:t}of l.attributes){"ref"==e&&(r.$refs[t]=l);"@"==e[0]&&(l[e.replace("@","on")]=r[t].bind(r));if(":"==e[0]){let c=e.slice(1);a(()=>l.setAttribute(c,l[c]=r[t]))}}if(3==o){let e=Array(...d.matchAll(/\{\{(.*?)\}\}/g));e[0]&&a(()=>l.data=e.reduce((e,t)=>e.replace(t[0],r[t[1].trim()]),d))}t.nextNode()?c(t,a):e.mounted?.call(r)};c(document.createTreeWalker(l,7),e=>(t=e,e()));for(let[t,l]of Object.entries(e.watch??{})){let e=r[t];a[t].add(()=>Promise.resolve().then(()=>{let a=r[t];l.call(r,a,e);e=a}))}}
