function Vue(e={}){let t=document,r=Object,a=Reflect,l,n=!1,c={},o=t.querySelector(e.el)??t,s=r.assign(new Proxy(e.data,{get:(...e)=>[a.get(...e),(c[e[1]]??=new Set).add(l)][0],set:(...e)=>[a.set(...e),c[e[1]]?.forEach(e=>e?.())][0]}),e.methods,{$el:o,$refs:{}}),d=RegExp(r.keys(s).map(e=>`(?<![\\w$])${e}(?![\\w$])`).join("|").replace(/\$/g,"\\$"),"g"),i=(e,t="return ")=>Function("$event",t+e.trim().replace(d,e=>"this."+e)).bind(s),u=e=>(l=e,e()),f=(e,r=t.createTreeWalker(e,7))=>{let{nodeType:a,data:l}=e;if(1==a)for(let{name:t,value:r}of e.attributes){let a=t.slice(1);"@"==t[0]&&(e["on"+a]=/[^\s\w$]/.test(r)?i(r,""):s[r.trim()]?.bind(s)),":"==t[0]&&u(()=>e.setAttribute(a,e[a]=i(r)())),"ref"==t&&(s.$refs[r]=e)}3==a&&u(()=>e.data=l.replace(/\{\{(.*?)\}\}/gs,(e,t)=>i(t)())),r.nextNode()&&f(r.currentNode,r)};for(let[t,a]of r.entries(e.watch??{})){let e=s[t];c[t].add(()=>Promise.resolve().then(()=>{let r=s[t];r!=e&&(a.call(s,r,e),e=r)}))}e.created?.call(s),f(o),l=()=>{n||(n=!0,requestAnimationFrame(()=>{n=!1,e.updated?.call(s)}))},e.mounted?.call(s)}
