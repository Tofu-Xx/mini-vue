function Vue(e={}){let t,r={},a=e.el?.at?document.querySelector(e.el):e.el??document,l=Object.assign(new Proxy("object"==typeof e.data?e.data:e.data?.()??{},{get:(...e)=>[Reflect.get(...e),(r[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),r[e[1]]?.forEach(e=>e?.())][0]}),e.methods,{$el:a,$refs:{}}),c=RegExp(Object.keys(l).map(e=>`(?<![\\w$])${e}(?![\\w$])`).join("|").replace(/\$/g,"\\$"),"g"),o=(e,t="return ")=>Function("$event",t+e.trim().replace(c,e=>"this."+e)).bind(l),n=e=>(t=e,e()),s=(t,r=document.createTreeWalker(t,7))=>{let{nodeType:a,data:c}=t;if(1==a)for(let{name:e,value:r}of t.attributes){let a=e.slice(1);"@"==e[0]&&(t["on"+a]=/[^\s\w$]/.test(r)?o(r,""):l[r.trim()]?.bind(l)),":"==e[0]&&n(()=>t.setAttribute(a,t[a]=o(r)())),"ref"==e&&(l.$refs[r]=t)}3==a&&n(()=>t.data=c.replace(/\{\{(.*?)\}\}/gs,(e,t)=>o(t)())),r.nextNode()?s(r.currentNode,r):e.mounted?.call(l)};for(let[t,c]of(s(a),Object.entries(e.watch??{}))){let e=l[t];r[t].add(()=>Promise.resolve().then(()=>{let r=l[t];c.call(l,r,e),e=r}))}}
