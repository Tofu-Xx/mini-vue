function Vue(e){let t,l={},a=e.el?.at?document.querySelector(e.el):e.el??document,r=Object.assign(new Proxy("object"==typeof e.data?e.data:e.data?.()??{},{get:(...e)=>[Reflect.get(...e),(l[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),l[e[1]]?.forEach(e=>e?.())][0]}),e.methods,{$el:a,$refs:{}}),c=RegExp(Object.keys(r).join("\\b|").replaceAll("$","\\$"),"g"),o=e=>Function("$event","return "+e.replace(c,e=>"this."+e)),n=e=>(t=e,e()),s=t=>{let l=t.currentNode,{nodeType:a,data:c}=l;if(1==a)for(let{name:e,value:t}of l.attributes){let a=e.slice(1);"@"==e[0]&&(l["on"+a]=(/[^\s\w$]/.test(t)?o(t):r[t.trim()])?.bind(r)),":"==e[0]&&n(()=>l.setAttribute(a,l[a]=o(t).call(r))),"ref"==e&&(r.$refs[t]=l)}3==a&&n(()=>l.data=c.replace(/\{\{(.*?)\}\}/g,(e,t)=>o(t).call(r))),t.nextNode()?s(t):e.mounted?.call(r)};for(let[t,c]of(s(document.createTreeWalker(a,7)),Object.entries(e.watch??{}))){let e=r[t];l[t].add(()=>Promise.resolve().then(()=>{let l=r[t];c.call(r,l,e),e=l}))}}
