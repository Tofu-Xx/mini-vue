function Vue(e={}){let t,r={},l=e.el?.at?document.querySelector(e.el):e.el??document,a=Object.assign(new Proxy(e.data,{get:(...e)=>[Reflect.get(...e),(r[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),r[e[1]]?.forEach(e=>e?.())][0]}),e.methods,{$el:l,$refs:{}}),c=RegExp(Object.keys(a).map(e=>`(?<![\\w$])${e}(?![\\w$])`).join("|").replace(/\$/g,"\\$"),"g"),n=(e,t="return ")=>Function("$event",t+e.trim().replace(c,e=>"this."+e)).bind(a),o=e=>(t=e,e()),s=(t,r=document.createTreeWalker(t,7))=>{let{nodeType:l,data:c}=t;if(1==l)for(let{name:e,value:r}of t.attributes){let l=e.slice(1);"@"==e[0]&&(t["on"+l]=/[^\s\w$]/.test(r)?n(r,""):a[r.trim()]?.bind(a)),":"==e[0]&&o(()=>t.setAttribute(l,t[l]=n(r)())),"ref"==e&&(a.$refs[r]=t)}3==l&&o(()=>t.data=c.replace(/\{\{(.*?)\}\}/gs,(e,t)=>n(t)())),r.nextNode()?s(r.currentNode,r):e.mounted?.call(a)};for(let[t,c]of(s(l),Object.entries(e.watch??{}))){let e=a[t];r[t].add(()=>Promise.resolve().then(()=>{let r=a[t];c.call(a,r,e),e=r}))}}
