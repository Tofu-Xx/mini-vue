function Vue(e={}){let t,l={},r=e.el?.at?document.querySelector(e.el):e.el??document,a=Object.assign(new Proxy(e.data,{get:(...e)=>[Reflect.get(...e),(l[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),l[e[1]]?.forEach(e=>e?.())][0]}),e.methods,{$el:r,$refs:{}}),c=RegExp(Object.keys(a).map(e=>`(?<![\\w$])${e}(?![\\w$])`).join("|").replace(/\$/g,"\\$"),"g"),n=(e,t="return ")=>Function("$event",t+e.trim().replace(c,e=>"this."+e)).bind(a),o=e=>(t=e,e()),d=(e,t=document.createTreeWalker(e,7))=>{let{nodeType:l,data:r}=e;if(1==l)for(let{name:t,value:l}of e.attributes){let r=t.slice(1);"@"==t[0]&&(e["on"+r]=/[^\s\w$]/.test(l)?n(l,""):a[l.trim()]?.bind(a)),":"==t[0]&&o(()=>e.setAttribute(r,e[r]=n(l)())),"ref"==t&&(a.$refs[l]=e)}3==l&&o(()=>e.data=r.replace(/\{\{(.*?)\}\}/gs,(e,t)=>n(t)())),t.nextNode()&&d(t.currentNode,t)};for(let[t,r]of Object.entries(e.watch??{})){let e=a[t];l[t].add(()=>Promise.resolve().then(()=>{let l=a[t];r.call(a,l,e),e=l}))}e.created?.call(a),d(r);let s=!1;t=()=>{s||(s=!0,requestAnimationFrame(()=>{s=!1,e.updated?.call(a)}))},e.mounted?.call(a)}
