function Vue(e={}){let t,l={},r=e.el?.at?document.querySelector(e.el):e.el??document,a=Object.assign(new Proxy("object"==typeof e.data?e.data:e.data?.()??{},{get:(...e)=>[Reflect.get(...e),(l[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),l[e[1]]?.forEach(e=>e?.())][0]}),e.methods,{$el:r,$refs:{}}),c=RegExp(Object.keys(a).join("\\b|").replaceAll("$","\\$"),"g"),o=(e,t="return ")=>Function("$event",t+e.trim().replace(c,e=>"this."+e)).bind(a),n=e=>(t=e,e()),d=t=>{let l=t.currentNode,{nodeType:r,data:c}=l;if(1==r)for(let{name:e,value:t}of l.attributes){let r=e.slice(1);"@"==e[0]&&(l["on"+r]=/[^\s\w$]/.test(t)?o(t,""):a[t.trim()]?.bind(a)),":"==e[0]&&n(()=>l.setAttribute(r,l[r]=o(t)())),"ref"==e&&(a.$refs[t]=l)}3==r&&n(()=>l.data=c.replace(/\{\{([^]*?)\}\}/g,(e,t)=>o(t)())),t.nextNode()?d(t):e.mounted?.call(a)};for(let[t,c]of(d(document.createTreeWalker(r,7)),Object.entries(e.watch??{}))){let e=a[t];l[t].add(()=>Promise.resolve().then(()=>{let l=a[t];c.call(a,l,e),e=l}))}}
