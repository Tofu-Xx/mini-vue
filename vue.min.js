function Vue(e={}){let t=document,a=Object,r=Reflect,l,c=!1,o={},s=t.querySelector(e.el)??t,n=a.assign(new Proxy(e.data,{get:(...e)=>[r.get(...e),(o[e[1]]??=new Set).add(l)][0],set:(...e)=>[r.set(...e),queueMicrotask(()=>o[e[1]]?.forEach(e=>e?.()))][0]}),e.methods,{$el:s,$refs:{}}),d=RegExp(a.keys(n).map(e=>`(?<![\\w$])${e}(?![\\w$])`).join("|").replace(/\$/g,"\\$"),"g"),i=(e,t="return ")=>Function("$event",t+e.trim().replace(d,e=>"this."+e)).bind(n),u=e=>(l=e,e()),f=(e,a=t.createTreeWalker(e,7))=>{let{nodeType:r,data:l}=e;if(1==r)for(let{name:t,value:a}of e.attributes){let r=t.slice(1);"@"==t[0]&&(e["on"+r]=/[^\s\w$]/.test(a)?i(a,""):n[a.trim()]?.bind(n)),":"==t[0]&&u(()=>e.setAttribute(r,e[r]=i(a)())),"ref"==t&&(n.$refs[a]=e)}3==r&&u(()=>e.data=l.replace(/\{\{(.*?)\}\}/gs,(e,t)=>i(t)())),a.nextNode()&&f(a.currentNode,a)};for(let[t,r]of a.entries(e.watch??{})){let e=n[t];o[t].add(()=>queueMicrotask(()=>{let a=n[t];a!=e&&(r.call(n,a,e),e=a)}))}e.created?.call(n),f(s),l=()=>{c||(c=!0,setTimeout(()=>{c=!1,e.updated?.call(n)}))},e.mounted?.call(n)}
