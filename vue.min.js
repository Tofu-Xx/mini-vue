function Vue(e={}){let t,r=!1,a={},l=document.querySelector(e.el)??document,n=Object.assign(new Proxy(e.data,{get:(...e)=>[Reflect.get(...e),(a[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),a[e[1]]?.forEach(e=>e?.())][0]}),e.methods,{$el:l,$refs:{}}),c=RegExp(Object.keys(n).map(e=>`(?<![\\w$])${e}(?![\\w$])`).join("|").replace(/\$/g,"\\$"),"g"),o=(e,t="return ")=>Function("$event",t+e.trim().replace(c,e=>"this."+e)).bind(n),d=e=>(t=e,e()),s=(e,t=document.createTreeWalker(e,7))=>{let{nodeType:r,data:a}=e;if(1==r)for(let{name:t,value:r}of e.attributes){let a=t.slice(1);"@"==t[0]&&(e["on"+a]=/[^\s\w$]/.test(r)?o(r,""):n[r.trim()]?.bind(n)),":"==t[0]&&d(()=>e.setAttribute(a,e[a]=o(r)())),"ref"==t&&(n.$refs[r]=e)}3==r&&d(()=>e.data=a.replace(/\{\{(.*?)\}\}/gs,(e,t)=>o(t)())),t.nextNode()&&s(t.currentNode,t)};for(let[t,r]of Object.entries(e.watch??{})){let e=n[t];a[t].add(()=>Promise.resolve().then(()=>{let a=n[t];a!==e&&(r.call(n,a,e),e=a)}))}e.created?.call(n),s(l),t=()=>{r||(r=!0,requestAnimationFrame(()=>{r=!1,e.updated?.call(n)}))},e.mounted?.bind(n)}
