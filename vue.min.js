function Vue(e={}){let t,l={},r=e.el?.at?document.querySelector(e.el):e.el??document,a=Object.assign(new Proxy("object"==typeof e.data?e.data:e.data?.()??{},{get:(...e)=>[Reflect.get(...e),(l[e[1]]??=new Set).add(t)][0],set:(...e)=>[Reflect.set(...e),l[e[1]]?.forEach(e=>e?.())][0]}),e.methods,{$el:r,$refs:{}}),c=RegExp(Object.keys(a).map(e=>`\\b${e}\\b`).join("|").replaceAll("$","\\$"),"g"),o=(e,t="return ")=>Function("$event",t+e.trim().replace(c,e=>"this."+e)).bind(a),n=e=>(t=e,e()),d=(t,l=document.createTreeWalker(t,7))=>{let{nodeType:r,data:c}=t;if(1==r)for(let{name:e,value:l}of t.attributes){let r=e.slice(1);"@"==e[0]&&(t["on"+r]=/[^\s\w$]/.test(l)?o(l,""):a[l.trim()]?.bind(a)),":"==e[0]&&n(()=>t.setAttribute(r,t[r]=o(l)())),"ref"==e&&(a.$refs[l]=t)}3==r&&n(()=>t.data=c.replace(/\{\{([^]*?)\}\}/g,(e,t)=>o(t)())),l.nextNode()?d(l.currentNode,l):e.mounted?.call(a)};for(let[t,c]of(d(r),Object.entries(e.watch??{}))){let e=a[t];l[t].add(()=>Promise.resolve().then(()=>{let l=a[t];c.call(a,l,e),e=l}))}}
